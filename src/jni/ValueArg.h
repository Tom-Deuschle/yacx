/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ValueArg */

#ifndef _Included_ValueArg
#define _Included_ValueArg
#ifdef __cplusplus
extern "C" {
#endif
#undef ValueArg_FLOAT
#define ValueArg_FLOAT 1L
#undef ValueArg_INT
#define ValueArg_INT 2L
#undef ValueArg_DOUBLE
#define ValueArg_DOUBLE 3L
#undef ValueArg_BOOLEAN
#define ValueArg_BOOLEAN 4L
/*
 * Class:     ValueArg
 * Method:    createInternal
 * Signature: (F)LValueArg;
 */
JNIEXPORT jobject JNICALL Java_ValueArg_createInternal__F
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     ValueArg
 * Method:    createInternal
 * Signature: (I)LValueArg;
 */
JNIEXPORT jobject JNICALL Java_ValueArg_createInternal__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     ValueArg
 * Method:    createInternal
 * Signature: (D)LValueArg;
 */
JNIEXPORT jobject JNICALL Java_ValueArg_createInternal__D
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     ValueArg
 * Method:    createInternal
 * Signature: (Z)LValueArg;
 */
JNIEXPORT jobject JNICALL Java_ValueArg_createInternal__Z
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     ValueArg
 * Method:    asFloatInternal
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_ValueArg_asFloatInternal
  (JNIEnv *, jobject);

/*
 * Class:     ValueArg
 * Method:    asIntInternal
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ValueArg_asIntInternal
  (JNIEnv *, jobject);

/*
 * Class:     ValueArg
 * Method:    asDoubleInternal
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_ValueArg_asDoubleInternal
  (JNIEnv *, jobject);

/*
 * Class:     ValueArg
 * Method:    asBooleanInternal
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ValueArg_asBooleanInternal
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
