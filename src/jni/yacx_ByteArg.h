/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class yacx_ByteArg */

#ifndef _Included_yacx_ByteArg
#define _Included_yacx_ByteArg
#ifdef __cplusplus
extern "C" {
#endif
#undef yacx_ByteArg_SIZE_BYTES
#define yacx_ByteArg_SIZE_BYTES 1L
/*
 * Class:     yacx_ByteArg
 * Method:    createValue
 * Signature: (B)Lyacx/KernelArg;
 */
JNIEXPORT jobject JNICALL Java_yacx_ByteArg_createValue
  (JNIEnv *, jclass, jbyte);

/*
 * Class:     yacx_ByteArg
 * Method:    create
 * Signature: (Lyacx/ByteArg;Z)Lyacx/ByteArg;
 */
JNIEXPORT jobject JNICALL Java_yacx_ByteArg_create
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     yacx_ByteArg
 * Method:    createInternal
 * Signature: ([BZ)Lyacx/ByteArg;
 */
JNIEXPORT jobject JNICALL Java_yacx_ByteArg_createInternal
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     yacx_ByteArg
 * Method:    createOutputInternal
 * Signature: (I)Lyacx/ByteArg;
 */
JNIEXPORT jobject JNICALL Java_yacx_ByteArg_createOutputInternal
  (JNIEnv *, jclass, jint);

/*
 * Class:     yacx_ByteArg
 * Method:    asByteArray
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_yacx_ByteArg_asByteArray
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
