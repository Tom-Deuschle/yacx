/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class IntArg */

#ifndef _Included_IntArg
#define _Included_IntArg
#ifdef __cplusplus
extern "C" {
#endif
#undef IntArg_SIZE_BYTES
#define IntArg_SIZE_BYTES 4L
/*
 * Class:     IntArg
 * Method:    createValue
 * Signature: (I)LKernelArg;
 */
JNIEXPORT jobject JNICALL Java_IntArg_createValue
  (JNIEnv *, jclass, jint);

/*
 * Class:     IntArg
 * Method:    create
 * Signature: (LIntArg;Z)LIntArg;
 */
JNIEXPORT jobject JNICALL Java_IntArg_create
  (JNIEnv *, jclass, jobject, jboolean);

/*
 * Class:     IntArg
 * Method:    createInternal
 * Signature: ([IZ)LIntArg;
 */
JNIEXPORT jobject JNICALL Java_IntArg_createInternal
  (JNIEnv *, jclass, jintArray, jboolean);

/*
 * Class:     IntArg
 * Method:    createOutputInternal
 * Signature: (I)LIntArg;
 */
JNIEXPORT jobject JNICALL Java_IntArg_createOutputInternal
  (JNIEnv *, jclass, jint);

/*
 * Class:     IntArg
 * Method:    asIntArray
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_IntArg_asIntArray
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
